rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Função para verificar se o usuário é o criador do recurso
    function isOwner(resource) {
      return request.auth != null && request.auth.uid == resource.data.createdBy;
    }
    
    // Função para verificar se o usuário é membro da empresa
    function isCompanyMember(companyId) {
      return request.auth != null && 
             exists(/databases/$(database)/documents/empresas/$(companyId)) &&
             get(/databases/$(database)/documents/empresas/$(companyId)).data.createdBy == request.auth.uid;
    }
    
    // Função para verificar se o usuário tem acesso à empresa através da query
    function hasCompanyAccess() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/usuarios/$(request.auth.uid));
    }
    
    // Função para verificar dados obrigatórios do usuário
    function isValidUserData() {
      return request.resource.data.keys().hasAll(['uid', 'email', 'nome', 'criadoEm', 'ativo']) &&
             request.resource.data.uid == request.auth.uid &&
             request.resource.data.email == request.auth.token.email;
    }
    
    // Função para validar dados básicos da empresa - CORRIGIDA
    function isValidCompanyData(data) {
      return data.keys().hasAll(['nome', 'cnpj', 'createdBy', 'ativo']) &&
             data.nome is string && data.nome.size() > 0 &&
             data.cnpj is string && data.cnpj.size() > 0 &&
             data.createdBy is string && data.createdBy == request.auth.uid &&
             data.ativo is bool;
    }

    // ===========================================
    // COLEÇÃO USUARIOS
    // ===========================================
    match /usuarios/{userId} {
      // Permitir operações básicas para usuários autenticados
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Criação durante registro
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Atualização pelo próprio usuário
      allow update: if request.auth != null && request.auth.uid == userId;
      
      // Exclusão pelo próprio usuário
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    // ===========================================
    // COLEÇÃO EMPRESAS (REGRAS SIMPLIFICADAS MÁXIMO)
    // ===========================================
    match /empresas/{empresaId} {
      // Permitir leitura para usuários autenticados
      allow read: if request.auth != null;
      
      // Permitir criação para usuários autenticados com dados mínimos
      allow create: if request.auth != null && 
                       request.resource.data.createdBy == request.auth.uid &&
                       request.resource.data.nome != null && 
                       request.resource.data.cnpj != null &&
                       request.resource.data.ativo != null;
      
      // Permitir atualização para usuários autenticados
      allow update: if request.auth != null && 
                       resource.data.createdBy == request.auth.uid;
      
      // Permitir exclusão para usuários autenticados
      allow delete: if request.auth != null && 
                       resource.data.createdBy == request.auth.uid;
    }

    // ===========================================
    // COLEÇÃO CHEQUES
    // ===========================================
    match /cheques/{chequeId} {
      // Operações básicas para usuários autenticados
      allow read, write: if request.auth != null && 
                            isCompanyMember(resource.data.empresaId);
      
      // Criação com dados básicos
      allow create: if request.auth != null && 
                       isCompanyMember(request.resource.data.empresaId);
    }

    // ===========================================
    // OUTRAS COLEÇÕES (PERMISSÕES BÁSICAS)
    // ===========================================
    match /transacoes/{transacaoId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null && 
                    request.resource.data.createdBy == request.auth.uid;
    }

    match /configuracoes/{configId} {
      allow read, write: if request.auth != null && 
                            isCompanyMember(resource.data.empresaId);
      allow create: if request.auth != null && 
                       isCompanyMember(request.resource.data.empresaId);
    }

    match /agenda/{eventId} {
      allow read, write: if request.auth != null && 
                            isCompanyMember(resource.data.empresaId);
      allow create: if request.auth != null && 
                       isCompanyMember(request.resource.data.empresaId);
    }

    match /suporte/{ticketId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null && 
                    request.resource.data.createdBy == request.auth.uid;
    }

    match /chat/{chatId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null;
    }

    match /tickets/{ticketId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null && 
                    request.resource.data.createdBy == request.auth.uid;
    }

    // ===========================================
    // SUBCOLEÇÕES
    // ===========================================
    match /chat/{chatId}/mensagens/{mensagemId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null && 
                    request.resource.data.userId == request.auth.uid;
    }

    // ===========================================
    // REGRA GERAL (FALLBACK)
    // ===========================================
    match /{document=**} {
      allow read, write: if false;
    }
  }
}